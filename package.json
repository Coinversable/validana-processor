{
	"name": "@coinversable/validana-processor",
	"version": "2.1.2",
	"private": true,
	"description": "The Validana processor for processing transactions and generating blocks.",
	"author": "Coinversable BV",
	"homepage": "https://validana.io/",
	"license": "AGPL-3.0-only",
	"repository": {
		"type": "git",
		"url": "https://github.com/Coinversable/validana-processor.git"
	},
	"main": "src/app.ts",
	"keywords": [
		"coinversable",
		"validana",
		"processor",
		"miner"
	],
	"scripts": {
		"build": "tsc && tsc --declaration true --emitDeclarationOnly true --removeComments false",
		"keys": "node --no-warnings -e \"const PK = require('validana-core').PrivateKey; const key = process.argv[1] ? PK.fromWIF(process.argv[1]) : PK.generate(); console.log(key.toWIF(), key.publicKey.toString('hex'), key.getAddress())\"",
		"keysjson": "node --no-warnings -pe \"const PK = require('validana-core').PrivateKey; const key = process.argv[1] ? PK.fromWIF(process.argv[1]) : PK.generate(); JSON.stringify({privateKey: key.toWIF(), publicKey: key.publicKey.toString('hex'), address: key.getAddress()})\"",
		"start": "node dist/index.js",
		"tslint": "tslint --project tsconfig.json -c tslint.json && tslint --project src/__tests__/tsconfig.json -c tslint.json",
		"test": "tsc -p src/__tests__/tsconfig.json && nyc jasmine dist/__tests__/**/*.js",
		"testall": "tsc -p src/__tests__/tsconfig.json && nyc jasmine dist/__tests__/**/*.js INTEGRATION=true"
	},
	"dependencies": {
		"@coinversable/validana-core": "^2.0.1",
		"@types/node": "*"
	},
	"devDependencies": {
		"@types/jasmine": "*",
		"tslint": "^5.0.0",
		"typescript": "^3.7.0"
	},
	"nyc": {
		"check-coverage": false,
		"all": true,
		"include": [
			"dist/**/*.js"
		],
		"exclude": [
			"dist/__tests__/**/*.js"
		],
		"reporter": [
			"html",
			"text-summary"
		],
		"temp-dir": "dist/__tests__/.nyc_output",
		"report-dir": "dist/__tests__/.coverage"
	}
}
